#!/usr/bin/env bash

set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

PLATFORM=`uname`
MD5_TOOL="md5sum"
if [ $PLATFORM = "Darwin" ]; then
  MD5_TOOL="md5"
fi

destination=$1
if [ -z "$destination" ]; then
  echo "usage: $0 <path/to/destination>"
  exit 1
fi

cd $destination

payload=$(mktemp $TMPDIR/gcs-rsync-resource-request.XXXXXX)

cat > $payload <&0

bucket=$(jq -r '.source.bucket // ""' < $payload)
if [ -z "$bucket" ]; then
  echo "invalid payload (missing bucket)"
  exit 1
fi

remote_path=$(jq -r '.source.remote_path // ""' < $payload)
if [ -z "$remote_path" ]; then
  echo "invalid payload (missing remote_path)"
  exit 1
fi

json_key=$(jq -r '.source.json_key // ""' < $payload)
if [ -z "$json_key" ]; then
  echo "invalid payload (missing json_key)"
  exit 1
fi
if [ -f "${json_key}" ]; then
  cp "${json_key}" "$TMPDIR/google_service_account.json"
else
  echo "${json_key}" > "$TMPDIR/google_service_account.json"
fi
json_key="$TMPDIR/google_service_account.json"

local_path=$(jq -r '.params.local_path // ""' < $payload)
if [ -z "$local_path" ]; then
  echo "invalid payload (missing local_path)"
  exit 1
fi

gcloud auth activate-service-account --key-file="${json_key}" --no-user-output-enabled

mkdir -p $local_path
pushd "${local_path}" > /dev/null
  gsutil -m rsync -d -r -n "gs://${bucket}/${remote_path}" "." &> $TMPDIR/metadata
  metadata=$(cat $TMPDIR/metadata \
    | grep -v "$(cat $TMPDIR/metadata | head -n 2)" \
    | awk '{print $2,$3,$5}' \
    | jq --raw-input --slurp 'split("\n")
      | .[0:-1]
      | map(split(" ") | {operation: .[0], source: .[1], destination: .[2]})
      | group_by(.operation)
      | map({(.[0].operation|tostring): .}) | add
      | del(.[][].operation)')

  gsutil -m rsync -d -r "gs://${bucket}/${remote_path}" "."
popd

echo "{ \"version\": { \"ref\": \"$(gsutil ls -la "gs://${bucket}/${remote_path}/**" | $MD5_TOOL | cut -d ' ' -f 1)\"}, \"metadata\": [ "$metadata" ] }" >&3
